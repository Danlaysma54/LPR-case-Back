@startuml

' Модели (таблицы из вашей ER-модели)
class AccountCard {
  +UUID account_card_id
  +UUID worker_id
  +UUID type_of_worker_id
  +UUID type_of_check_id
  +UUID position_id
  +UUID sold_items_id
  +UUID wage_id
}

class Worker {
  +UUID worker_id
  +String worker_name
  +String worker_surname
  +String worker_middle_name
  + UUID type_vacation_id
}

class TypeOfWorker {
  +UUID type_of_worker_id
  +String type_of_worker_name
}

class WorkerTime {
  +UUID worker_id
  +Timestamp worker_start_time
  +Timestamp worker_end_time
  +Boolean is_paid
}

class TypeOfCheck {
  +UUID type_of_check_id
  +String type_of_check_name
}

class Wage {
  +UUID wage_id
  +UUID wage_numb
}

class SoldItems {
  +UUID sold_items_id
  +UUID product_id
  +Timestamp date_of_sale
  +int numb_of_sold
}

class Position {
  +UUID position_id
  +String position_name
}

class Product {
  +UUID product_id
  +String product_name
}

class SoldItemsInAccountCard {
  +UUID account_card_id
  +UUID sold_items_id
}

class TypeOfVacation {
  +UUID type_vacation_id
  +int vacation_days
}

class Payment {
  +UUID paymentId
  +UUID account_card_id
  +int amount
  +Timestamp payment_date
}

class Vacation {
  +UUID worker_id
  +Timestamp start_vacation_date
  +Timestamp end_vacation_date
}

' Сервисы
class AccountCardService {
  +createAccountCard()
  +updateAccountCard()
  +getAccountCardById()
  +getAllAccountCards()
}

class WorkerService {
  +createWorker()
  +updateWorker()
  +getWorkerById()
  +getAllWorkers()
}

class PaymentService {
  +createPayment()
  +getPaymentsByAccountCard()
  +processPayment()
}

class WorkerTimeService {
  +createWorkerTime()
  +updateWorkerTime()
  +getWorkerTimeByWorkerId()
}

' Репозитории
class AccountCardRepository {
  +save(accountCard)
  +findById(accountCardId)
  +findAll()
  +deleteById(accountCardId)
}

class WorkerRepository {
  +save(worker)
  +findById(workerId)
  +findAll()
  +deleteById(workerId)
}

class PaymentRepository {
  +save(payment)
  +findByAccountCardId(accountCardId)
  +findAll()
  +deleteById(paymentId)
}

class WorkerTimeRepository {
  +save(workerTime)
  +findByWorkerId(workerId)
  +findAll()
  +deleteById(workerTimeId)
}

' Контроллеры
class AccountCardController {
  +createAccountCard()
  +updateAccountCard()
  +getAccountCardById()
  +getAllAccountCards()
}

class WorkerController {
  +createWorker()
  +updateWorker()
  +getWorkerById()
  +getAllWorkers()
}

class PaymentController {
  +createPayment()
  +getPaymentsByAccountCard()
  +processPayment()
}

class WorkerTimeController {
  +createWorkerTime()
  +updateWorkerTime()
  +getWorkerTimeByWorkerId()
}

' Связи
AccountCardController --> AccountCardService : calls
WorkerController --> WorkerService : calls
PaymentController --> PaymentService : calls
WorkerTimeController --> WorkerTimeService : calls

AccountCardService --> AccountCardRepository : interacts with
WorkerService --> WorkerRepository : interacts with
PaymentService --> PaymentRepository : interacts with
WorkerTimeService --> WorkerTimeRepository : interacts with

WorkerTime "1" --> "1" Worker : has
Vacation "1" --> "0..1" Worker : has
AccountCard "1" --> "0..1" Worker : has

AccountCard "1" --> "1" TypeOfWorker : has
AccountCard "1" --> "1" TypeOfCheck : has
AccountCard "1" --> "1" Position : has
AccountCard "1" --> "0..*" SoldItemsInAccountCard : contains

SoldItems "1" --> "0..*" SoldItemsInAccountCard : is included in

SoldItems "1" --> "1" Product : sold
Payment "0..*" --> "1" AccountCard : made via


Worker "1" --> "0..1" TypeOfVacation : applies to
AccountCard "1" --> "1" Wage : has

@enduml