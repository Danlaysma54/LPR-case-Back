openapi: 3.0.3
info:
  title: LPR
  description: API для проекта LPR, который представляет из себя TMS
  version: 0.0.1
servers:
  - url: localhost:8080
tags:
  - name: Test case
  - name: Suite
  - name: Tree
  - name: Test plan
paths:
  /{projectId}/{testPlanId}:
    patch:
      tags:
        - Test plan
      summary: editing test plan
      operationId: editTestPlan
      parameters:
        - name: project
          in: path
          description: Id of project
          required: true
          schema:
            type: string
            format: UUID
        - name: testPlanId
          in: path
          description: Id of testPlan
          required: true
          schema:
            type: string
            format: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
  /{projectId}/addTestPlan:
    post:
      tags:
        - Test plan
      summary: creating test plan
      operationId: addTestPlan
      parameters:
        - name: projectId
          in: path
          description: Id of project
          required: true
          schema:
            type: string
            format: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
  /getTestCaseTypes:
    get:
      tags:
        - Test case
      summary: Getting types for test case
      operationId: getTypeOfTestCase
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseTypes'
  /{projectId}/addTestCase:
    post:
      tags:
        - Test case
      summary: adding new test case
      operationId: addTestCase
      parameters:
        - name: projectId
          in: path
          description: Id of project
          required: true
          schema:
            type: string
            format: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseRequest'
        required: true
      responses:
        '201':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseId'
  /{projectId}/{suiteId}/{testCaseId}:
    patch:
      tags:
        - Test case
      summary: edting test case
      operationId: editTestCase
      parameters:
        - name: projectId
          in: path
          description: Id of project
          required: true
          schema:
            type: string
            format: UUID
        - name: suiteId
          in: path
          description: Id of suite
          required: true
          schema:
            type: string
            format: UUID
        - name: testCaseId
          in: path
          description: Id of test case
          required: true
          schema:
            type: string
            format: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCase'
        required: true
      responses:
        '200':
          description: Succeful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
        '404':
          description: Id with this test case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - Test case
      summary: deleting test case
      operationId: deleteTestCase
      parameters:
        - name: projectId
          in: path
          description: Id of project
          required: true
          schema:
            type: string
            format: UUID
        - name: suiteId
          in: path
          description: Id of suite
          required: true
          schema:
            type: string
            format: UUID
        - name: testCaseId
          in: path
          description: Id of test case
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Succeful operation
        '404':
          description: Id with this test case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    get:
      tags:
        - Test case
      summary: getting test case
      operationId: getTestCase
      parameters:
        - name: projectId
          in: path
          description: Id of project
          required: true
          schema:
            type: string
            format: UUID
        - name: suiteId
          in: path
          description: Id of suite
          required: true
          schema:
            type: string
            format: UUID
        - name: testCaseId
          in: path
          description: Id of test case
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Succeful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
        '404':
          description: Id with this test case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /{projectId}/addSuite:
    post:
      tags:
        - Suite
      summary: add suite
      operationId: addSuite
      parameters:
        - name: projectId
          in: path
          description: ID of the project
          required: true
          schema:
            type: string
            format: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Suite'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuiteId'
        '404':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /{projectId}/editSuite:
    patch:
      tags:
        - Suite
      summary: editing suite
      operationId: editSuite
      parameters:
        - name: projectId
          in: path
          description: ID of the project
          required: true
          schema:
            type: string
            format: UUID

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suite'
        '404':
          description: Suite not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /{projectId}/{suiteId}/deleteSuite:
    delete:
      tags:
        - Suite
      summary: deleting suite
      operationId: delSuite
      parameters:
        - name: projectId
          in: path
          description: ID of the project
          required: true
          schema:
            type: string
            format: UUID
        - name: suiteId
          in: path
          description: ID of the suite
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suite'
        '404':
          description: Suite not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /{projectId}/getOneLevel:
    get:
      tags:
        - Tree
      summary: Get one level of suites and cases
      operationId: getOneLevel
      parameters:
        - name: projectId
          in: path
          description: ID of the project
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Successful operation - one level of suites and cases retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneLevelResponse'
        '404':
          description: Suite not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    Automation:
      type: object
      properties:
        automationName:
          type: string
          example: automation name
        automationId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec9
    Layer:
      type: object
      properties:
        layerName:
          type: string
          example: LayerName
        layerId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec9a
    TestCaseDTO:
      type: object
      properties:
        сaseName:
          type: string
          example: TestCaseName
        сaseId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec90
      xml:
        name: TestCaseDTO
    TestCaseTypes:
      type: object
      properties:
        layers:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Layer'
        automations:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Automation'
    TestCase:
      type: object
      properties:
        testCaseId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec91
        testCaseName:
          type: string
          example: TestCaseName
        layerId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec92
        isAutomatedId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec93
        steps:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Step'
      xml:
        name: TestCase
    TestCaseRequest:
      type: object
      properties:
        testCaseName:
          type: string
          example: TestCaseName
        layerId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec92
        isAutomatedId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec93
        suiteID:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec93
      xml:
        name: TestCaseRequest
    Suite:
      type: object
      properties:
        suiteId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec91
        suiteName:
          type: string
          example: SuiteName
        suiteRootId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec92
      xml:
        name: Suite
    OneLevelResponse:
      type: object
      properties:
        cases:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TestCaseDTO'
        suites:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Suite'
      xml:
        name: OneLevelResponse
    TestPlan:
      type: object
      properties:
        testPlanId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec9h
        testPlanName:
          type: string
          example: test plan name
        testCases:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TestCaseDTO'
    ErrorMessage:
      type: object
      properties:
        messageError:
          type: string
          format: string
          example: example of error message
      xml:
        name: ErrorMessage
    TestCaseId:
      type: object
      properties:
        testCaseId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec9h
    SuiteId:
      type: object
      properties:
        suiteId:
          type: string
          format: UUID
          example: 9a4f3f8-41cf-4ad0-83a9-a268ec43ec9h
    Step:
      type: object
      properties:
        stepDescription:
          type: string
          example: Description of step
        stepData:
          type: string
          example: data of step
        stepResult:
          type: string
          example: result of step
        stepNumber:
          type: number
          example: 1

